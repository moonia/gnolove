// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package gnoindexerql

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// GetPublishedPackagesResponse is returned by GetPublishedPackages on success.
type GetPublishedPackagesResponse struct {
	// Retrieves a list of Transactions that match the given filter criteria. If the result is incomplete due to errors, both partial results and errors are returned.
	Transactions []GetPublishedPackagesTransactionsTransaction `json:"transactions"`
}

// GetTransactions returns GetPublishedPackagesResponse.Transactions, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesResponse) GetTransactions() []GetPublishedPackagesTransactionsTransaction {
	return v.Transactions
}

// GetPublishedPackagesTransactionsTransaction includes the requested fields of the GraphQL type Transaction.
// The GraphQL type's documentation follows.
//
// Defines a transaction within a block, detailing its execution specifics and content.
type GetPublishedPackagesTransactionsTransaction struct {
	// Hash from Transaction content in base64 encoding.
	Hash string `json:"hash"`
	// The height of the Block in which this Transaction is included. Links the Transaction to its containing Block.
	Block_height int `json:"block_height"`
	// The payload of a message shows the contents of the messages in a transaction.
	// A message consists of `router`, `type`, and `value` (whose form depends on the `router` and `type`).
	Messages []GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage `json:"messages"`
}

// GetHash returns GetPublishedPackagesTransactionsTransaction.Hash, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransaction) GetHash() string { return v.Hash }

// GetBlock_height returns GetPublishedPackagesTransactionsTransaction.Block_height, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransaction) GetBlock_height() int { return v.Block_height }

// GetMessages returns GetPublishedPackagesTransactionsTransaction.Messages, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransaction) GetMessages() []GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage {
	return v.Messages
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage includes the requested fields of the GraphQL type TransactionMessage.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage struct {
	// The type of transaction message.
	// The value of `typeUrl` can be `send`, `exec`, `add_package`, `run`.
	TypeUrl string `json:"typeUrl"`
	// MessageValue is the content of the transaction.
	// `value` can be of type `BankMsgSend`, `MsgCall`, `MsgAddPackage`, `MsgRun`, `UnexpectedMessage`.
	Value GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue `json:"-"`
}

// GetTypeUrl returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage.TypeUrl, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) GetTypeUrl() string {
	return v.TypeUrl
}

// GetValue returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage.Value, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) GetValue() GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue {
	return v.Value
}

func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage
		Value json.RawMessage `json:"value"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Value
		src := firstPass.Value
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessage struct {
	TypeUrl string `json:"typeUrl"`

	Value json.RawMessage `json:"value"`
}

func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage) __premarshalJSON() (*__premarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessage, error) {
	var retval __premarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessage

	retval.TypeUrl = v.TypeUrl
	{

		dst := &retval.Value
		src := v.Value
		var err error
		*dst, err = __marshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal GetPublishedPackagesTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
		}
	}
	return &retval, nil
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue includes the requested fields of the GraphQL interface MessageValue.
//
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue is implemented by the following types:
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun
// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue interface {
	implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) implementsGraphQLInterfaceGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue() {
}

func __unmarshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue(b []byte, v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "BankMsgSend":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend)
		return json.Unmarshal(b, *v)
	case "MsgAddPackage":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage)
		return json.Unmarshal(b, *v)
	case "MsgCall":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall)
		return json.Unmarshal(b, *v)
	case "MsgRun":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun)
		return json.Unmarshal(b, *v)
	case "UnexpectedMessage":
		*v = new(GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MessageValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue: "%v"`, tn.TypeName)
	}
}

func __marshalGetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue(v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend:
		typename = "BankMsgSend"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
		}{typename, v}
		return json.Marshal(result)
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage:
		typename = "MsgAddPackage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
		}{typename, v}
		return json.Marshal(result)
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall:
		typename = "MsgCall"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall
		}{typename, v}
		return json.Marshal(result)
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun:
		typename = "MsgRun"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun
		}{typename, v}
		return json.Marshal(result)
	case *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage:
		typename = "UnexpectedMessage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValue: "%T"`, v)
	}
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend includes the requested fields of the GraphQL type BankMsgSend.
// The GraphQL type's documentation follows.
//
// `BankMsgSend` is a message with a message router of `bank` and a message type of `send`.
// `BankMsgSend` is the fund transfer tx message.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) GetTypename() string {
	return v.Typename
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage includes the requested fields of the GraphQL type MsgAddPackage.
// The GraphQL type's documentation follows.
//
// `MsgAddPackage` is a message with a message router of `vm` and a message type of `add_package`.
// `MsgAddPackage` is the package deployment tx message.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage struct {
	Typename string `json:"__typename"`
	// the bech32 address of the package deployer.
	// ex) `g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5`
	Creator string `json:"creator"`
	// the amount of funds to be deposited at deployment, if any ("<amount><denomination>").
	// ex) `1000000ugnot`
	Deposit string `json:"deposit"`
	// the package being deployed.
	Package GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage `json:"package"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetTypename() string {
	return v.Typename
}

// GetCreator returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Creator, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetCreator() string {
	return v.Creator
}

// GetDeposit returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Deposit, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetDeposit() string {
	return v.Deposit
}

// GetPackage returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Package, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetPackage() GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage {
	return v.Package
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage includes the requested fields of the GraphQL type MemPackage.
// The GraphQL type's documentation follows.
//
// `MemPackage` is the metadata information tied to package / realm deployment.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage struct {
	// the gno path of the package.
	Path string `json:"path"`
	// the name of the package.
	Name string `json:"name"`
}

// GetPath returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage.Path, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage) GetPath() string {
	return v.Path
}

// GetName returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage.Name, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgAddPackagePackageMemPackage) GetName() string {
	return v.Name
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall includes the requested fields of the GraphQL type MsgCall.
// The GraphQL type's documentation follows.
//
// `MsgCall` is a message with a message router of `vm` and a message type of `exec`.
// `MsgCall` is the method invocation tx message.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetTypename() string {
	return v.Typename
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun includes the requested fields of the GraphQL type MsgRun.
// The GraphQL type's documentation follows.
//
// `MsgRun` is a message with a message router of `vm` and a message type of `run`.
// `MsgRun is the execute arbitrary Gno code tx message`.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetTypename() string {
	return v.Typename
}

// GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage includes the requested fields of the GraphQL type UnexpectedMessage.
// The GraphQL type's documentation follows.
//
// `UnexpectedMessage` is an Undefined Message, which is a message that decoding failed.
type GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage.Typename, and is useful for accessing the field via an interface.
func (v *GetPublishedPackagesTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) GetTypename() string {
	return v.Typename
}

// GetUserRegistrationsResponse is returned by GetUserRegistrations on success.
type GetUserRegistrationsResponse struct {
	// Retrieves a list of Transactions that match the given filter criteria. If the result is incomplete due to errors, both partial results and errors are returned.
	Transactions []GetUserRegistrationsTransactionsTransaction `json:"transactions"`
}

// GetTransactions returns GetUserRegistrationsResponse.Transactions, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsResponse) GetTransactions() []GetUserRegistrationsTransactionsTransaction {
	return v.Transactions
}

// GetUserRegistrationsTransactionsTransaction includes the requested fields of the GraphQL type Transaction.
// The GraphQL type's documentation follows.
//
// Defines a transaction within a block, detailing its execution specifics and content.
type GetUserRegistrationsTransactionsTransaction struct {
	// Hash from Transaction content in base64 encoding.
	Hash string `json:"hash"`
	// The height of the Block in which this Transaction is included. Links the Transaction to its containing Block.
	Block_height int `json:"block_height"`
	// The payload of a message shows the contents of the messages in a transaction.
	// A message consists of `router`, `type`, and `value` (whose form depends on the `router` and `type`).
	Messages []GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage `json:"messages"`
}

// GetHash returns GetUserRegistrationsTransactionsTransaction.Hash, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransaction) GetHash() string { return v.Hash }

// GetBlock_height returns GetUserRegistrationsTransactionsTransaction.Block_height, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransaction) GetBlock_height() int { return v.Block_height }

// GetMessages returns GetUserRegistrationsTransactionsTransaction.Messages, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransaction) GetMessages() []GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage {
	return v.Messages
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage includes the requested fields of the GraphQL type TransactionMessage.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage struct {
	// MessageValue is the content of the transaction.
	// `value` can be of type `BankMsgSend`, `MsgCall`, `MsgAddPackage`, `MsgRun`, `UnexpectedMessage`.
	Value GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue `json:"-"`
}

// GetValue returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage.Value, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage) GetValue() GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue {
	return v.Value
}

func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage
		Value json.RawMessage `json:"value"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Value
		src := firstPass.Value
		if len(src) != 0 && string(src) != "null" {
			err = __unmarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue(
				src, dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
			}
		}
	}
	return nil
}

type __premarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessage struct {
	Value json.RawMessage `json:"value"`
}

func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage) __premarshalJSON() (*__premarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessage, error) {
	var retval __premarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessage

	{

		dst := &retval.Value
		src := v.Value
		var err error
		*dst, err = __marshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue(
			&src)
		if err != nil {
			return nil, fmt.Errorf(
				"unable to marshal GetUserRegistrationsTransactionsTransactionMessagesTransactionMessage.Value: %w", err)
		}
	}
	return &retval, nil
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue includes the requested fields of the GraphQL interface MessageValue.
//
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue is implemented by the following types:
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun
// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue interface {
	implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) implementsGraphQLInterfaceGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue() {
}

func __unmarshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue(b []byte, v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "BankMsgSend":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend)
		return json.Unmarshal(b, *v)
	case "MsgAddPackage":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage)
		return json.Unmarshal(b, *v)
	case "MsgCall":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall)
		return json.Unmarshal(b, *v)
	case "MsgRun":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun)
		return json.Unmarshal(b, *v)
	case "UnexpectedMessage":
		*v = new(GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MessageValue.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue: "%v"`, tn.TypeName)
	}
}

func __marshalGetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue(v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend:
		typename = "BankMsgSend"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend
		}{typename, v}
		return json.Marshal(result)
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage:
		typename = "MsgAddPackage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage
		}{typename, v}
		return json.Marshal(result)
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall:
		typename = "MsgCall"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall
		}{typename, v}
		return json.Marshal(result)
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun:
		typename = "MsgRun"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun
		}{typename, v}
		return json.Marshal(result)
	case *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage:
		typename = "UnexpectedMessage"

		result := struct {
			TypeName string `json:"__typename"`
			*GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValue: "%T"`, v)
	}
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend includes the requested fields of the GraphQL type BankMsgSend.
// The GraphQL type's documentation follows.
//
// `BankMsgSend` is a message with a message router of `bank` and a message type of `send`.
// `BankMsgSend` is the fund transfer tx message.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueBankMsgSend) GetTypename() string {
	return v.Typename
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage includes the requested fields of the GraphQL type MsgAddPackage.
// The GraphQL type's documentation follows.
//
// `MsgAddPackage` is a message with a message router of `vm` and a message type of `add_package`.
// `MsgAddPackage` is the package deployment tx message.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgAddPackage) GetTypename() string {
	return v.Typename
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall includes the requested fields of the GraphQL type MsgCall.
// The GraphQL type's documentation follows.
//
// `MsgCall` is a message with a message router of `vm` and a message type of `exec`.
// `MsgCall` is the method invocation tx message.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall struct {
	Typename string `json:"__typename"`
	// the bech32 address of the function caller.
	// ex) `g1jg8mtutu9khhfwc4nxmuhcpftf0pajdhfvsqf5`
	Caller string `json:"caller"`
	// the gno package path.
	Pkg_path string `json:"pkg_path"`
	// the function name being invoked.
	Func string `json:"func"`
	// `args` are the arguments passed to the executed function.
	Args []string `json:"args"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetTypename() string {
	return v.Typename
}

// GetCaller returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Caller, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetCaller() string {
	return v.Caller
}

// GetPkg_path returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Pkg_path, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetPkg_path() string {
	return v.Pkg_path
}

// GetFunc returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Func, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetFunc() string {
	return v.Func
}

// GetArgs returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall.Args, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgCall) GetArgs() []string {
	return v.Args
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun includes the requested fields of the GraphQL type MsgRun.
// The GraphQL type's documentation follows.
//
// `MsgRun` is a message with a message router of `vm` and a message type of `run`.
// `MsgRun is the execute arbitrary Gno code tx message`.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueMsgRun) GetTypename() string {
	return v.Typename
}

// GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage includes the requested fields of the GraphQL type UnexpectedMessage.
// The GraphQL type's documentation follows.
//
// `UnexpectedMessage` is an Undefined Message, which is a message that decoding failed.
type GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage struct {
	Typename string `json:"__typename"`
}

// GetTypename returns GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage.Typename, and is useful for accessing the field via an interface.
func (v *GetUserRegistrationsTransactionsTransactionMessagesTransactionMessageValueUnexpectedMessage) GetTypename() string {
	return v.Typename
}

// __GetPublishedPackagesInput is used internally by genqlient
type __GetPublishedPackagesInput struct {
	StartBlock int `json:"StartBlock"`
}

// GetStartBlock returns __GetPublishedPackagesInput.StartBlock, and is useful for accessing the field via an interface.
func (v *__GetPublishedPackagesInput) GetStartBlock() int { return v.StartBlock }

// __GetUserRegistrationsInput is used internally by genqlient
type __GetUserRegistrationsInput struct {
	StartBlock int `json:"StartBlock"`
}

// GetStartBlock returns __GetUserRegistrationsInput.StartBlock, and is useful for accessing the field via an interface.
func (v *__GetUserRegistrationsInput) GetStartBlock() int { return v.StartBlock }

func GetPublishedPackages(
	ctx context.Context,
	client graphql.Client,
	StartBlock int,
) (*GetPublishedPackagesResponse, error) {
	req := &graphql.Request{
		OpName: "GetPublishedPackages",
		Query: `
query GetPublishedPackages ($StartBlock: Int!) {
	transactions(filter: {success:true,from_block_height:$StartBlock,message:{type_url:add_package}}) {
		hash
		block_height
		messages {
			typeUrl
			value {
				__typename
				... on MsgAddPackage {
					creator
					deposit
					package {
						path
						name
					}
				}
			}
		}
	}
}
`,
		Variables: &__GetPublishedPackagesInput{
			StartBlock: StartBlock,
		},
	}
	var err error

	var data GetPublishedPackagesResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func GetUserRegistrations(
	ctx context.Context,
	client graphql.Client,
	StartBlock int,
) (*GetUserRegistrationsResponse, error) {
	req := &graphql.Request{
		OpName: "GetUserRegistrations",
		Query: `
query GetUserRegistrations ($StartBlock: Int!) {
	transactions(filter: {success:true,from_block_height:$StartBlock,events:{pkg_path:"gno.land/r/gnoland/users/v1"}}) {
		hash
		block_height
		messages {
			value {
				__typename
				... on MsgCall {
					caller
					pkg_path
					func
					args
				}
			}
		}
	}
}
`,
		Variables: &__GetUserRegistrationsInput{
			StartBlock: StartBlock,
		},
	}
	var err error

	var data GetUserRegistrationsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
